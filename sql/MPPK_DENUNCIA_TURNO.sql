CREATE OR REPLACE PACKAGE SISMPA.MPPK_DENUNCIA_TURNO
AS

/**********************************************************************************************
* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_LISTAR_DENUNCIAS_REGISTRADAS
* Autor         : Pedro Yarleque Linares
* Versi?n       : 1.0
* Descripci?n   : Listar las denuncias registradas
* Fecha creaci?n: 27.11.2023
***********************************************************************************************/

PROCEDURE MPSP_LISTAR_DENUNCIAS_REGISTRADAS (
    PI_N_PAGINA          IN NUMBER,
	PI_N_POR_PAGINA      IN NUMBER,
	PI_V_CO_CASO         IN SISEFE.EFTV_CASO.CO_V_CASO%TYPE,
	PI_N_DPND_POLICIAL   IN SISMAEST.CFTM_DEPENDENCIA_POLICIAL.ID_N_DPND_POLICIAL%TYPE,
	PI_V_ID_USUARIO      IN SISSAD.SATV_USUARIO.ID_V_USUARIO%TYPE,
	PO_N_TOTAL_PAGINAS   OUT NUMBER,
	PO_N_TOTAL_REGISTROS OUT NUMBER,
	PO_CR_DENUNCIAS_REGISTRADAS OUT SYS_REFCURSOR,
	PO_V_ERR_COD         OUT VARCHAR2,
	PO_V_ERR_MSG         OUT VARCHAR2
);

/*************************************************************************
* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_INSERTAR_DATOS_GENERALES
* Autor         : Manuel Cruz Daza
* Versi?n       : 1.0
* Descripci?n   : Insertar datos generales al registrar la llamada
* Fecha creaci?n: 24.11.2023
***************************************************************************/

PROCEDURE MPSP_INSERTAR_DATOS_GENERALES (
	PI_V_TIPO_DOCUMENTO_IDENTIDAD 	IN SISCFE.CFTV_PERSONA.ID_N_TIPO_DOC_IDENT%TYPE,
	PI_V_NU_DOCUMENTO				IN SISCFE.CFTV_PERSONA.NU_V_DOCUMENTO%TYPE,
	PI_V_NO_REMITENTE				IN SISCFE.CFTV_PERSONA_NATURAL.NO_V_CIUDADANO%TYPE,
	PI_V_AP_PATERNO					IN SISCFE.CFTV_PERSONA_NATURAL.AP_V_PATERNO%TYPE,
	PI_V_AP_MATERNO					IN SISCFE.CFTV_PERSONA_NATURAL.AP_V_MATERNO%TYPE,
	PI_V_NU_TELEFONO				IN SISMPA.MPTV_DENUNCIA_REMITENTE.NU_V_TELEFONO%TYPE,
	PI_V_CORREO						IN SISMPA.MPTV_DENUNCIA_REMITENTE.DE_V_CORREO%TYPE,
	PI_V_USUARIO					IN VARCHAR2,
	PI_N_ID_TIPO_SUJETO				IN NUMBER,
	PI_V_CO_DPND_FISCAL				IN VARCHAR,
	PI_V_CO_DESPACHO				IN SISEFE.EFTV_CASO.CO_V_DESPACHO%TYPE,
	PI_V_ID_DPND_POLICIAL			IN NUMBER,
	PI_FE_D_LLAMADA					IN DATE,
	PI_N_ID_TIPO_DENUNCIA			IN NUMBER,
	PI_V_CO_DISTRITO_FISCAL			IN VARCHAR2,
	PO_V_ID_DENUNCIA				OUT VARCHAR2,
	PO_V_ID_CASO					OUT VARCHAR,
	PO_V_CO_CASO					OUT VARCHAR,
	PO_V_CO_DESPACHO				OUT VARCHAR,
	PO_V_NO_ESPECIALIDAD			OUT VARCHAR,
	PO_N_ID_DISTRITO_FISCAL			OUT NUMBER,
	PO_V_ID_ESPECIALIDAD			OUT SISEFE.EFTV_CASO.ID_V_ESPECIALIDAD%TYPE,
	PO_V_CO_ENTIDAD					OUT VARCHAR2,
	PO_N_ID_TIPO_ENTIDAD    		OUT SISEFE.EFTV_CASO.ID_N_TIPO_ENTIDAD%TYPE,
    PO_V_FE_CREACION				OUT VARCHAR2,
    PO_V_ERR_COD               		OUT VARCHAR2,
    PO_V_ERR_MSG               		OUT VARCHAR2
   );
/******************************************************************************
* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_VALIDAR_SI_MESA_ESTA_DE_TURNO
* Autor         : Pedro Yarleque Linares
* Versi?n       : 1.0
* Descripci?n   : Valida si la mesa se encuentra de turno
* Fecha creaci?n: 01.12.2023
*******************************************************************************/

PROCEDURE MPSP_VALIDAR_SI_MESA_ESTA_DE_TURNO (
	PIV_V_CO_DESPACHO IN  SISMAEST.CFTM_DESPACHO.CO_V_DESPACHO%TYPE,
	PO_V_ERR_COD      OUT VARCHAR2,
    PO_V_ERR_MSG      OUT VARCHAR2
);

PROCEDURE MPSP_LISTAR_PARTE_INVOLUCRADA_JURIDICA (
    PI_V_ID_CASO         IN  VARCHAR2,
    PO_V_ERR_COD         OUT VARCHAR2,
    PO_V_ERR_MSG         OUT VARCHAR2,
    PO_CR_PERSONAS       OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_PARTE_INVOLUCRADA_NATURAL (
    PI_V_ID_CASO 	IN VARCHAR2,
    PO_V_ERR_COD    OUT VARCHAR2,
	PO_V_ERR_MSG    OUT VARCHAR2,
	PO_CR_PERSONAS  OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_HECHOS_DENUNCIA (
    PI_V_ID_CASO         IN  VARCHAR2,
    PO_V_ERR_COD         OUT VARCHAR2,
    PO_V_ERR_MSG         OUT VARCHAR2,
    PO_CR_HECHOS         OUT SYS_REFCURSOR
);


PROCEDURE MPSP_RECUPERAR_DATOS_GENERALES (
    PI_V_ID_CASO          IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DATOS_GENERALES       OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_SUJETO_CONTACTO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_CONTACTOS       OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_DIRECCIONES_SUJETO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DIRECCIONES     OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_DELITOS_POR_DENUNCIA (
    PI_V_ID_DENUNCIA      IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DELITOS         OUT SYS_REFCURSOR
);

PROCEDURE MPSP_LISTAR_DELITOS_SUJETO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DELITOS_SUJETO  OUT SYS_REFCURSOR
);



PROCEDURE MPSP_LISTAR_DESCRIPCION (
 	P_NO_V_GRUPO IN VARCHAR2,
    P_NO_V_DESCRIPCION IN VARCHAR2,
    PI_N_PAGINA IN NUMBER,
    PI_N_POR_PAGINA IN NUMBER,
    PO_N_TOTAL_PAGINAS OUT NUMBER,
    PO_N_TOTAL_REGISTROS OUT NUMBER,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    P_CURSOR OUT SYS_REFCURSOR
);

END MPPK_DENUNCIA_TURNO;

CREATE OR REPLACE PACKAGE BODY SISMPA.MPPK_DENUNCIA_TURNO
AS

V_V_COD_OK VARCHAR2(40) := '0';
V_V_MSG_OK VARCHAR2(200) := 'LA OPERACION SE REALIZ? SATISFACTORIAMENTE';

EX_CONTROLADO EXCEPTION;

/**********************************************************************************************
* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_LISTAR_DENUNCIAS_REGISTRADAS
* Autor         : Pedro Yarleque Linares
* Versi?n       : 1.0
* Descripci?n   : Listar las denuncias registradas
* Fecha creaci?n: 27.11.2023
***********************************************************************************************/

PROCEDURE MPSP_LISTAR_DENUNCIAS_REGISTRADAS (
    PI_N_PAGINA          IN NUMBER,
	PI_N_POR_PAGINA      IN NUMBER,
	PI_V_CO_CASO         IN SISEFE.EFTV_CASO.CO_V_CASO%TYPE,
	PI_N_DPND_POLICIAL   IN SISMAEST.CFTM_DEPENDENCIA_POLICIAL.ID_N_DPND_POLICIAL%TYPE,
	PI_V_ID_USUARIO      IN SISSAD.SATV_USUARIO.ID_V_USUARIO%TYPE,
	PO_N_TOTAL_PAGINAS   OUT NUMBER,
	PO_N_TOTAL_REGISTROS OUT NUMBER,
	PO_CR_DENUNCIAS_REGISTRADAS OUT SYS_REFCURSOR,
	PO_V_ERR_COD         OUT VARCHAR2,
	PO_V_ERR_MSG         OUT VARCHAR2
) AS

  V_V_QUERY        VARCHAR2(32767) := '';
  V_N_PAGINA       NUMBER := nvl(PI_N_PAGINA, 1);
  V_N_POR_PAGINA   NUMBER := nvl(PI_N_POR_PAGINA, 10);
  V_N_OFFSET       NUMBER;
  V_N_LIMIT        NUMBER;
  V_N_TIPO_ORIGEN  NUMBER := 4; -- TURNOS

BEGIN

	V_V_QUERY := '
			SELECT
				 COUNT(1)
			FROM SISMPA.MPTV_DENUNCIA md
			INNER JOIN SISEFE.EFTV_CASO ec
			        ON md.ID_V_CASO = ec.ID_V_CASO
			 LEFT JOIN SISMPA.MPTV_HECHO mh
	                ON ec.ID_V_CASO = mh.ID_V_CASO
                   AND mh.ES_C_HECHO = ''1''
			 LEFT JOIN SISMAEST.CFTM_DEPENDENCIA_POLICIAL cdp
			        ON md.ID_N_DPND_POLICIAL = cdp.ID_N_DPND_POLICIAL
       LEFT JOIN SISEFE.EFTV_FISCAL_ASIGNADO efa
              ON efa.ID_V_FISCAL_ASIGNADO = ec.ID_V_FISCAL_ASIGNADO
			INNER JOIN SISMPA.MPTV_DENUNCIA_REMITENTE mdr
			        ON md.ID_V_DENUNCIA_REMITENTE = mdr.ID_V_DENUNCIA_REMITENTE
			INNER JOIN SISCFE.CFTV_PERSONA cp
			        ON mdr.ID_V_PERSONA = cp.ID_V_PERSONA
			     WHERE md.ID_N_TIPO_ORIGEN = :V_N_TIPO_ORIGEN
                   AND ( (
                        CASE
                            WHEN :PI_V_CO_CASO IS NOT NULL AND ec.CO_V_CASO LIKE ''%'' || :PI_V_CO_CASO || ''%'' THEN
                                1
                            WHEN :PI_V_CO_CASO IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
                   AND ( (
                        CASE
                            WHEN :PI_N_DPND_POLICIAL IS NOT NULL AND md.ID_N_DPND_POLICIAL = :PI_N_DPND_POLICIAL THEN
                                1
                            WHEN :PI_N_DPND_POLICIAL IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
                  AND ( (
                        CASE
                            WHEN :PI_V_ID_USUARIO IS NOT NULL AND efa.ID_V_USUARIO = :PI_V_ID_USUARIO THEN
                                1
                            WHEN :PI_V_ID_USUARIO IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
          ';

EXECUTE IMMEDIATE V_V_QUERY
    INTO PO_N_TOTAL_REGISTROS
          USING V_N_TIPO_ORIGEN, PI_V_CO_CASO, PI_V_CO_CASO, PI_V_CO_CASO,
                PI_N_DPND_POLICIAL, PI_N_DPND_POLICIAL, PI_N_DPND_POLICIAL,
                PI_V_ID_USUARIO, PI_V_ID_USUARIO, PI_V_ID_USUARIO;

PO_N_TOTAL_PAGINAS := ceil(PO_N_TOTAL_REGISTROS / V_N_POR_PAGINA);
    V_N_OFFSET := ( V_N_PAGINA - 1 ) * V_N_POR_PAGINA;
    V_N_LIMIT := V_N_POR_PAGINA;

    V_V_QUERY := '
			SELECT
				md.ID_V_CASO,
				ec.CO_V_CASO,
				(CASE WHEN md.ID_N_TIPO_DENUNCIA = 359 THEN
						(SELECT msc.FE_D_DETENCION
						FROM SISCFE.CFTV_SUJETO_CASO csc
						INNER JOIN SISMPA.MPTV_SUJETO_CONDICION msc
						        ON csc.ID_V_SUJETO_CASO = msc.ID_V_SUJETO_CASO
						WHERE msc.ID_N_TIPO_COND_SUJETO = 3
						  AND csc.ID_V_CASO = md.ID_V_CASO
						FETCH FIRST 1 ROWS ONLY)
				     ELSE NULL
				END) FE_D_INICIO_DETENCION,
				(CASE WHEN md.ID_N_TIPO_DENUNCIA = 359 THEN
						(SELECT msc.FE_D_MAXIMA_DETENCION
						FROM SISCFE.CFTV_SUJETO_CASO csc
						INNER JOIN SISMPA.MPTV_SUJETO_CONDICION msc
						        ON csc.ID_V_SUJETO_CASO = msc.ID_V_SUJETO_CASO
						WHERE msc.ID_N_TIPO_COND_SUJETO = 3
						  AND csc.ID_V_CASO = md.ID_V_CASO
						FETCH FIRST 1 ROWS ONLY)
				     ELSE NULL
				END) AS FE_D_FIN_DETENCION,
                ( SELECT DECODE(NO_V_DESCRIPCION,''COMPLETO'', ''Completado'', ''Pendiente'')
				  FROM SISMAEST.CFTM_CATALOGO
				  WHERE ID_N_CATALOGO = md.ID_N_ESTADO_REGISTRO
				    AND NO_V_GRUPO = ''ID_N_ESTADO_REGISTRO''
                ) DE_V_ESTADO_REGISTRO,
				md.ID_N_TIPO_DENUNCIA,
				( SELECT NO_V_DESCRIPCION
				  FROM SISMAEST.CFTM_CATALOGO
				  WHERE ID_N_CATALOGO = md.ID_N_TIPO_DENUNCIA
				    AND NO_V_GRUPO = ''ID_N_TIPO_DENUNCIA''
				) NO_V_TIPO_DENUNCIA,
				TO_CHAR(mh.FE_D_HECHO, ''DD/MM/YYYY'') FE_V_FECHA_HECHO,
				TO_CHAR(mh.FE_D_HECHO, ''HH:MI AM'') FE_V_HORA_HECHO,
				cdp.NO_V_DPND_POLICIAL,
				(CASE WHEN cp.ID_N_TIPO_DOC_IDENT = 2 THEN
				          (SELECT cpj.DE_V_RAZON_SOCIAL
				          FROM SISCFE.CFTV_PERSONA_JURIDICA cpj
				          WHERE cpj.ID_V_PERSONA = cp.ID_V_PERSONA
				            AND cpj.ES_C_PERSONA_JURIDICA = ''1''
				          FETCH FIRST 1 ROWS ONLY)
				      ELSE
				          (SELECT  TRIM(cpn.NO_V_CIUDADANO || '' '' || cpn.AP_V_PATERNO || '' '' || NVL(cpn.AP_V_MATERNO, '' ''))
				          FROM SISCFE.CFTV_PERSONA_NATURAL cpn
				          WHERE cpn.ID_V_PERSONA = cp.ID_V_PERSONA
				            AND cpn.ES_C_PERSONA_NATURAL = ''1''
				          FETCH FIRST 1 ROWS ONLY)
				END) NO_V_REMITENTE,
				mdr.NU_V_TELEFONO NU_V_CELULAR_REMITENTE,
				(
				   SELECT TRIM(scpn.NO_V_CIUDADANO || '' '' || scpn.AP_V_PATERNO || '' '' || NVL(scpn.AP_V_MATERNO, '' ''))
				   FROM SISSAD.SATV_USUARIO su
				   INNER JOIN SISCFE.CFTV_PERSONA scp ON scp.ID_V_PERSONA = su.ID_V_PERSONA
				   INNER JOIN SISCFE.CFTV_PERSONA_NATURAL scpn ON scpn.ID_V_PERSONA = scp.ID_V_PERSONA
				   WHERE su.ID_V_USUARIO = efa.ID_V_USUARIO
				) NO_V_FISCAL_ASIGNADO,
				(
					SELECT COUNT(1)
					FROM SISCFE.CFTV_DOCUMENTO doc
					WHERE doc.ID_V_CASO = ec.ID_V_CASO
					  AND doc.ID_C_TIPO_DOCUMENTO = ''05''
				) NU_N_ACTAS,
				(
					CASE WHEN (
						SELECT
						    COUNT(1)
						FROM SISCFE.CFTV_SUJETO_CASO a
						INNER JOIN SISMPA.MPTX_FICHA_RENADESPPLE b
						        ON a.ID_V_SUJETO_CASO = b.ID_V_SUJETO_CASO
						WHERE a.ID_N_TIPO_PARTE_SUJETO = 4
						  AND a.ID_V_CASO = ec.ID_V_CASO
					) > 0 THEN ''S?''
					      ELSE ''NO''
					END
				) FL_V_FICHA_RENADESSPLE,
				(
					SELECT COUNT(1)
					FROM SISCFE.CFTV_SUJETO_CASO a
					INNER JOIN SISCFE.CFTV_PERSONA b
					        ON a.ID_V_PERSONA = b.ID_V_PERSONA
					WHERE a.ID_V_CASO = ec.ID_V_CASO
					  AND b.ID_N_TIPO_DOC_IDENT <> 2
				) NU_N_PERSONAS_NATURALES,
				(
					SELECT COUNT(1)
					FROM SISCFE.CFTV_SUJETO_CASO a
					INNER JOIN SISCFE.CFTV_PERSONA b
					        ON a.ID_V_PERSONA = b.ID_V_PERSONA
					WHERE a.ID_V_CASO = ec.ID_V_CASO
					  AND b.ID_N_TIPO_DOC_IDENT = 2
				) NU_N_PERSONAS_JURIDICAS
			FROM SISMPA.MPTV_DENUNCIA md
			INNER JOIN SISEFE.EFTV_CASO ec
			        ON md.ID_V_CASO = ec.ID_V_CASO
			 LEFT JOIN SISMPA.MPTV_HECHO mh
	                ON ec.ID_V_CASO = mh.ID_V_CASO
                   AND mh.ES_C_HECHO = ''1''
			 LEFT JOIN SISMAEST.CFTM_DEPENDENCIA_POLICIAL cdp
			        ON md.ID_N_DPND_POLICIAL = cdp.ID_N_DPND_POLICIAL
       LEFT JOIN SISEFE.EFTV_FISCAL_ASIGNADO efa
              ON efa.ID_V_FISCAL_ASIGNADO = ec.ID_V_FISCAL_ASIGNADO
			INNER JOIN SISMPA.MPTV_DENUNCIA_REMITENTE mdr
			        ON md.ID_V_DENUNCIA_REMITENTE = mdr.ID_V_DENUNCIA_REMITENTE
			INNER JOIN SISCFE.CFTV_PERSONA cp
			        ON mdr.ID_V_PERSONA = cp.ID_V_PERSONA
			     WHERE md.ID_N_TIPO_ORIGEN = :V_N_TIPO_ORIGEN
                   AND ( (
                        CASE
                            WHEN :PI_V_CO_CASO IS NOT NULL AND ec.CO_V_CASO LIKE ''%'' || :PI_V_CO_CASO || ''%'' THEN
                                1
                            WHEN :PI_V_CO_CASO IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
                   AND ( (
                        CASE
                            WHEN :PI_N_DPND_POLICIAL IS NOT NULL AND md.ID_N_DPND_POLICIAL = :PI_N_DPND_POLICIAL THEN
                                1
                            WHEN :PI_N_DPND_POLICIAL IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
                  AND ( (
                        CASE
                            WHEN :PI_V_ID_USUARIO IS NOT NULL AND efa.ID_V_USUARIO = :PI_V_ID_USUARIO THEN
                                1
                            WHEN :PI_V_ID_USUARIO IS NULL THEN
                                1
                            ELSE
                                0
                        END
                     ) = 1 )
            ORDER BY md.FE_D_CREACION DESC
            OFFSET :V_N_OFFSET ROWS FETCH NEXT :V_N_LIMIT ROWS ONLY
       ';

OPEN PO_CR_DENUNCIAS_REGISTRADAS FOR V_V_QUERY
            USING V_N_TIPO_ORIGEN,
           		  PI_V_CO_CASO, PI_V_CO_CASO, PI_V_CO_CASO,
                  PI_N_DPND_POLICIAL, PI_N_DPND_POLICIAL, PI_N_DPND_POLICIAL,
                  PI_V_ID_USUARIO, PI_V_ID_USUARIO, PI_V_ID_USUARIO,
                  V_N_OFFSET, V_N_LIMIT;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERROR AL INTENTAR LISTAR DENUNCIAS REGISTRADAS: ' || to_char(SQLCODE) || ' - ' ||SQLERRM;
END;


/*************************************************************************
* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_INSERTAR_DATOS_GENERALES
* Autor         : Manuel Cruz Daza
* Versi?n       : 1.0
* Descripci?n   : Insertar datos generales al registrar la llamada
* Fecha creaci?n: 24.11.2023
***************************************************************************/

PROCEDURE MPSP_INSERTAR_DATOS_GENERALES (
	PI_V_TIPO_DOCUMENTO_IDENTIDAD 	IN SISCFE.CFTV_PERSONA.ID_N_TIPO_DOC_IDENT%TYPE,
	PI_V_NU_DOCUMENTO				IN SISCFE.CFTV_PERSONA.NU_V_DOCUMENTO%TYPE,
	PI_V_NO_REMITENTE				IN SISCFE.CFTV_PERSONA_NATURAL.NO_V_CIUDADANO%TYPE,
	PI_V_AP_PATERNO					IN SISCFE.CFTV_PERSONA_NATURAL.AP_V_PATERNO%TYPE,
	PI_V_AP_MATERNO					IN SISCFE.CFTV_PERSONA_NATURAL.AP_V_MATERNO%TYPE,
	PI_V_NU_TELEFONO				IN SISMPA.MPTV_DENUNCIA_REMITENTE.NU_V_TELEFONO%TYPE,
	PI_V_CORREO						IN SISMPA.MPTV_DENUNCIA_REMITENTE.DE_V_CORREO%TYPE,
	PI_V_USUARIO					IN VARCHAR2,
	PI_N_ID_TIPO_SUJETO				IN NUMBER,
	PI_V_CO_DPND_FISCAL				IN VARCHAR,
	PI_V_CO_DESPACHO				IN SISEFE.EFTV_CASO.CO_V_DESPACHO%TYPE,
	PI_V_ID_DPND_POLICIAL			IN NUMBER,
	PI_FE_D_LLAMADA					IN DATE,
	PI_N_ID_TIPO_DENUNCIA			IN NUMBER,
	PI_V_CO_DISTRITO_FISCAL			IN VARCHAR2,
	PO_V_ID_DENUNCIA				OUT VARCHAR2,
	PO_V_ID_CASO					OUT VARCHAR,
	PO_V_CO_CASO					OUT VARCHAR,
	PO_V_CO_DESPACHO				OUT VARCHAR,
	PO_V_NO_ESPECIALIDAD			OUT VARCHAR,
	PO_N_ID_DISTRITO_FISCAL			OUT NUMBER,
	PO_V_ID_ESPECIALIDAD			OUT SISEFE.EFTV_CASO.ID_V_ESPECIALIDAD%TYPE,
	PO_V_CO_ENTIDAD					OUT VARCHAR2,
	PO_N_ID_TIPO_ENTIDAD    		OUT SISEFE.EFTV_CASO.ID_N_TIPO_ENTIDAD%TYPE,
    PO_V_FE_CREACION				OUT VARCHAR2,
    PO_V_ERR_COD               		OUT VARCHAR2,
    PO_V_ERR_MSG               		OUT VARCHAR2
   ) AS
  	V_N_NUM_ROWS               				NUMBER := 0;
  	V_V_ID_PERSONA             				SISCFE.CFTV_PERSONA.ID_V_PERSONA%TYPE;
    V_V_ID_DENUNCIA_REMITENTE				VARCHAR2(100);
  	V_V_ID_USUARIO							VARCHAR(100);
BEGIN

SELECT COUNT(*) INTO V_N_NUM_ROWS
FROM SISCFE.CFTV_PERSONA
WHERE ID_N_TIPO_DOC_IDENT = PI_V_TIPO_DOCUMENTO_IDENTIDAD  AND
    NU_V_DOCUMENTO = PI_V_NU_DOCUMENTO;

IF  V_N_NUM_ROWS >0 THEN
SELECT ID_V_PERSONA INTO V_V_ID_PERSONA
FROM SISCFE.CFTV_PERSONA
WHERE ID_N_TIPO_DOC_IDENT = PI_V_TIPO_DOCUMENTO_IDENTIDAD  AND
    NU_V_DOCUMENTO = PI_V_NU_DOCUMENTO AND ES_C_PERSONA= '1';
UPDATE SISCFE.CFTV_PERSONA_NATURAL
SET
    NO_V_CIUDADANO = PI_V_NO_REMITENTE,
    AP_V_PATERNO = PI_V_AP_PATERNO,
    AP_V_MATERNO = PI_V_AP_MATERNO
WHERE ID_V_PERSONA = V_V_ID_PERSONA;
ELSE
    	INSERT INTO SISCFE.CFTV_PERSONA(
        	ID_N_TIPO_DOC_IDENT,
            NU_V_DOCUMENTO
        )
        VALUES(
        	PI_V_TIPO_DOCUMENTO_IDENTIDAD,
            PI_V_NU_DOCUMENTO
        ) RETURNING ID_V_PERSONA INTO V_V_ID_PERSONA;

INSERT INTO SISCFE.CFTV_PERSONA_NATURAL(
    ID_V_PERSONA,
    NO_V_CIUDADANO,
    AP_V_PATERNO,
    AP_V_MATERNO
)
VALUES(
          V_V_ID_PERSONA,
          PI_V_NO_REMITENTE,
          PI_V_AP_PATERNO,
          PI_V_AP_MATERNO
      );
END IF;

INSERT INTO SISMPA.MPTV_DENUNCIA_REMITENTE(
    ID_V_PERSONA,
    NU_V_TELEFONO,
    DE_V_CORREO,
    CO_V_US_CREACION,
    FE_D_CREACION,
    ID_N_TIPO_SUJETO)
VALUES(
          V_V_ID_PERSONA,
          PI_V_NU_TELEFONO,
          PI_V_CORREO,
          PI_V_USUARIO,
          SYSDATE,
          PI_N_ID_TIPO_SUJETO
      ) RETURNING ID_V_DENUNCIA_REMITENTE INTO V_V_ID_DENUNCIA_REMITENTE;

----  INSERTAR DENUNCUA
-- dependencia - (ahora entidad)
-- SELECT ID_N_ENTIDAD INTO V_N_ID_DPND_FISCAL FROM SISMAEST.SATM_ENTIDAD se WHERE CO_V_DPND_FISCAL = PI_V_CO_DPND_FISCAL;
-- id usuario
SELECT ID_V_USUARIO INTO V_V_ID_USUARIO
FROM SISSAD.SATV_USUARIO U
WHERE U.CO_V_USERNAME = PI_V_USUARIO AND ES_C_USUARIO = 1 AND ROWNUM = 1;

-- sacamos todo con join CONTRLAR EXCEPTION
SELECT CE.ID_V_ESPECIALIDAD, CE.NO_V_ESPECIALIDAD, E.CO_V_ENTIDAD, E.ID_N_TIPO_ENTIDAD
INTO PO_V_ID_ESPECIALIDAD, PO_V_NO_ESPECIALIDAD, PO_V_CO_ENTIDAD, PO_N_ID_TIPO_ENTIDAD
FROM SISMAEST.SATM_ENTIDAD E
         INNER JOIN SISMAEST.CFTM_DEPENDENCIA_ESPECIALIDAD DE ON DE.CO_V_ENTIDAD = E.CO_V_ENTIDAD
    -- INNER JOIN SISMAEST.CFTM_TIPO_ESPECIALIDAD_ESPECIALIDAD CTEE ON  DE.ID_V_TIPO_ESPECIALIDAD_ESPECIALIDAD  = CTEE.ID_V_TIPO_ESPECIALIDAD_ESPECIALIDAD
         INNER JOIN SISMAEST.CFTM_ESPECIALIDAD CE ON CE.ID_V_ESPECIALIDAD = DE.ID_V_ESPECIALIDAD
WHERE E.CO_V_ENTIDAD = PI_V_CO_DPND_FISCAL;

--- ID DESPACHO
SELECT CO_V_DESPACHO INTO PO_V_CO_DESPACHO
FROM SISMAEST.CFTM_DESPACHO
WHERE CO_V_DESPACHO = PI_V_CO_DESPACHO;

-- ID DISTRITO FISCAL
SELECT ID_N_DISTRITO_FISCAL INTO PO_N_ID_DISTRITO_FISCAL
FROM SISMAEST.CFTM_DISTRITO_FISCAL CDF WHERE CDF.CO_V_DISTRITO_FISCAL = PI_V_CO_DISTRITO_FISCAL;

-- Especialidad
-- Verificar la relaci?n 1-1, 1-&, &-1, &-&
-- SELECT e.ID_N_ESPECIALIDAD INTO V_ID_N_ESPECIALIDAD FROM SISMAEST.CFTM_DEPENDENCIA_ESPECIALIDAD e WHERE e.ID_N_ENTIDAD =  V_N_ID_DPND_FISCAL;


-- PI_V_ID_DPND_FISCAL := 23;
INSERT INTO SISMPA.MPTV_DENUNCIA (
    ID_V_CASO,
    ID_N_TIPO_SUJETO,
    CO_V_ENTIDAD,
    ID_N_TIPO_ORIGEN,
    ID_V_ESPECIALIDAD,
    FE_D_LLAMADA,
    ID_N_CANAL_INGRESO,
    ID_V_USUARIO,
    CO_V_US_CREACION,
    ID_V_DENUNCIA_REMITENTE,
    ID_N_DPND_POLICIAL,
    ID_N_TIPO_DENUNCIA,
    ID_N_ESTADO_REGISTRO,
    CO_V_DESPACHO,
    FE_D_REGISTRO

)
VALUES (
           NULL,
           PI_N_ID_TIPO_SUJETO,
           PO_V_CO_ENTIDAD,
           4,
           PO_V_ID_ESPECIALIDAD,
           PI_FE_D_LLAMADA,
           1, -- CANAL DE INGRESO POR VER
           V_V_ID_USUARIO, -- ID USUARIO
           PI_V_USUARIO,-- ??? USERNAME - DNI
           V_V_ID_DENUNCIA_REMITENTE,
           PI_V_ID_DPND_POLICIAL,
           PI_N_ID_TIPO_DENUNCIA,
           365, -- incompleto Cat?logo
           PO_V_CO_DESPACHO,
           SYSDATE
       ) RETURNING ID_V_DENUNCIA INTO PO_V_ID_DENUNCIA;


-- CREAR CASO
MPPK_CASO_TURNO.MPSP_CREAR_CASO_DENUNCIA(
            PI_V_CO_DPND_FISCAL,
            PO_V_CO_DESPACHO,
            PO_V_ID_DENUNCIA,
            PI_V_ID_DPND_POLICIAL,
            V_V_ID_DENUNCIA_REMITENTE,
            PO_V_ID_ESPECIALIDAD,
            PI_N_ID_TIPO_SUJETO,
            PI_V_USUARIO,
            PO_V_ID_CASO,
            PO_V_CO_CASO,
            PO_V_ERR_COD,
            PO_V_ERR_MSG
            );

UPDATE SISMPA.MPTV_DENUNCIA SET ID_V_CASO=PO_V_ID_CASO WHERE ID_V_DENUNCIA = PO_V_ID_DENUNCIA;

SELECT TO_CHAR(FE_D_CREACION,'DD/MM/YYY HH:MI AM')
INTO PO_V_FE_CREACION
FROM SISEFE.EFTV_CASO
WHERE ID_V_CASO = PO_V_ID_CASO;

-- PO_V_ERR_COD := '0';
-- PO_V_ERR_MSG :='';

EXCEPTION
		WHEN EX_CONTROLADO THEN
			PO_V_ERR_COD := '1';
			PO_V_ERR_MSG := 'ERROR AL INTENTAR GUARDAR LA DENUNCIAC: ' || PI_V_CO_DISTRITO_FISCAL || ' - ' ||SQLERRM;
        --WHEN OTHERS THEN
          --  PO_V_ERR_COD := '1';
            --PO_V_ERR_MSG := 'ERROR AL INTENTAR GUARDAR LA DENUNCIA: ' || PI_V_CO_DISTRITO_FISCAL || ' - ' ||SQLERRM;

END ;

	/********************************************************************
	* Nombre        : SISMPA.MPPK_DENUNCIA_TURNO.MPSP_VALIDAR_MESA_TURNO
	* Autor         : Pedro Yarleque Linares
	* Versi?n       : 1.0
	* Descripci?n   : Valida si la mesa se encuentra de turno
	* Fecha creaci?n: 01.12.2023
	*********************************************************************/

	PROCEDURE MPSP_VALIDAR_SI_MESA_ESTA_DE_TURNO (
		PIV_V_CO_DESPACHO IN  SISMAEST.CFTM_DESPACHO.CO_V_DESPACHO%TYPE,
		PO_V_ERR_COD      OUT VARCHAR2,
	    PO_V_ERR_MSG      OUT VARCHAR2
	) AS

		V_N_CONTADOR NUMBER := 0;
		V_V_COD_ERR VARCHAR2(40) := '0';
		V_V_MSG_ERR VARCHAR2(200) := '';

BEGIN

SELECT COUNT(1)
INTO V_N_CONTADOR
FROM SISSAD.SATV_TURNO st
WHERE ST.CO_V_DESPACHO = (
    SELECT cd.CO_V_DESPACHO
    FROM SISMAEST.CFTM_DESPACHO cd
    WHERE TRIM(UPPER(cd.CO_V_DESPACHO)) = TRIM(UPPER(PIV_V_CO_DESPACHO))
)
  AND st.ES_TURNO = '1'
  AND SYSDATE BETWEEN st.FE_D_INICIO AND st.FE_D_FIN;

IF V_N_CONTADOR = 0 THEN
	    	PO_V_ERR_COD := '42202035';
			SISCFE.CFPK_MENSAJE_VALIDACION.CFSP_OBTENER_MENSAJE_VALIDACION(PO_V_ERR_COD, PO_V_ERR_MSG, V_V_COD_ERR, V_V_MSG_ERR);
		    RAISE EX_CONTROLADO;
END IF;

	    PO_V_ERR_COD := V_V_COD_OK;
		PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
	    WHEN EX_CONTROLADO THEN
	        DBMS_OUTPUT.PUT_LINE('ERROR CONTROLADO : '|| PO_V_ERR_COD || ' - ' || PO_V_ERR_MSG);
WHEN OTHERS THEN
	        PO_V_ERR_COD := '1';
	        PO_V_ERR_MSG := 'ERROR AL INTENTAR VALIDAR SI LA MESA ESTA DE TURNO: ' || to_char(SQLCODE) || ' - ' ||SQLERRM;
END;

PROCEDURE MPSP_LISTAR_PARTE_INVOLUCRADA_NATURAL (
    PI_V_ID_CASO 	IN VARCHAR2,
    PO_V_ERR_COD    OUT VARCHAR2,
	PO_V_ERR_MSG    OUT VARCHAR2,
	PO_CR_PERSONAS  OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_PERSONAS FOR
SELECT
    SC.ID_V_SUJETO_CASO,
    SC.ID_N_TIPO_PARTE_SUJETO,
    SC.ID_N_TIPO_PERSONA,
    cnd.ID_V_SUJETO_CONDICION,
    SD.FL_C_EXTRANJERO,
    sd.FL_C_FUNC_PUBLICO,
    SC.FL_C_AGRAVIADO,
    CPN.ID_N_NACIONALIDAD,
    P.ID_N_TIPO_DOC_IDENT,
    P.NU_V_DOCUMENTO,
    CPN.FL_C_VERIFICADO,
    CPN.NO_V_CIUDADANO,
    CPN.AP_V_PATERNO,
    CPN.AP_V_MATERNO,
    CPN.FE_D_NACIMIENTO,
    CPN.TI_C_SEXO,
    CPN.ID_N_TIPO_LENGUA,
    CPN.ID_N_TIPO_PUEBLO,
    CPN.FL_C_TRADUCTOR,
    CPN.FL_C_AFROPERUANO,
    CPN.FL_C_DISCAPACIDAD,
    CPN.FL_C_PRIV_LIBERTAD,
    CPN.FL_C_PRIV_LIBERTAD,
    CPN.FL_C_VIH_TBC,
    CPN.FL_C_TRAB_HOGAR,
    CPN.FL_C_MIGRANTE,
    SD.FL_C_DEFENSOR,
    CPN.FL_C_VICTIM_VIOLE_8020,
    CPN.FL_C_LGTBI
FROM
    SISCFE.CFTV_SUJETO_CASO SC
        LEFT JOIN SISMPA.MPTV_SUJETO_CONDICION cnd ON
        cnd.ID_V_SUJETO_CASO = SC.ID_V_SUJETO_CASO
        INNER JOIN SISCFE.CFTV_PERSONA P ON
        SC.ID_V_PERSONA = P.ID_V_PERSONA
        INNER JOIN SISCFE.CFTV_PERSONA_NATURAL cpn ON
        cpn.ID_V_PERSONA = P.ID_V_PERSONA
        INNER JOIN SISCFE.CFTV_SUJETO_CASO_DETALLE sd ON
        SD.ID_V_SUJETO_CASO = SC.ID_V_SUJETO_CASO
WHERE
    SC.ID_V_CASO = PI_V_ID_CASO AND
    SC.ID_N_TIPO_PERSONA=1;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    	WHEN OTHERS THEN
	        PO_V_ERR_COD := '1';
	        PO_V_ERR_MSG := 'ERROR AL RECUPERAR LA LISTA DE PERSONAS NATURALES: ' || to_char(SQLCODE) || ' - ' ||SQLERRM;

END MPSP_LISTAR_PARTE_INVOLUCRADA_NATURAL;

PROCEDURE MPSP_LISTAR_PARTE_INVOLUCRADA_JURIDICA (
    PI_V_ID_CASO         IN  VARCHAR2,
    PO_V_ERR_COD         OUT VARCHAR2,
    PO_V_ERR_MSG         OUT VARCHAR2,
    PO_CR_PERSONAS       OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_PERSONAS FOR
SELECT
    SC.ID_V_SUJETO_CASO ID_SUJETO_CASO,
    sc.ID_N_TIPO_PARTE_SUJETO AS ID_TIPO_PARTE_SUJETO,
    sc.ID_N_TIPO_PERSONA AS ID_TIPO_PERSONA,
    cnd.ID_V_SUJETO_CONDICION AS ID_SUJETO_CONDICION,
    p.ID_N_TIPO_DOC_IDENT AS ID_TIPO_DOCUMENTO,
    p.NU_V_DOCUMENTO AS NUMERO_RUC,
    CPJ.DE_V_RAZON_SOCIAL AS RAZON_SOCIAL,
    CPJ.FL_C_VERIFICADO AS ES_VERIFICADO,
    pp.NU_V_DOCUMENTO AS NUMERO_DOCUMENTO_REPRESENTANTE,
    PP.ID_N_TIPO_DOC_IDENT AS ID_TIPO_DOCUMENTO_REPRESENTANTE,
    CPN.NO_V_CIUDADANO AS NOMBRE_REPRESENTANTE,
    CPN.AP_V_PATERNO AS APELLIDO_PATERNO_REPRESENTANTE,
    CPN.AP_V_MATERNO AS APELLIDO_MATERNO_REPRESENTANTE,
    CPN.FL_C_VERIFICADO AS ES_REPRESENTANTE_VERIFICADO
FROM
    SISCFE.CFTV_SUJETO_CASO sc
        LEFT JOIN SISMPA.MPTV_SUJETO_CONDICION cnd ON
        cnd.ID_V_SUJETO_CASO = sc.ID_V_SUJETO_CASO
        INNER JOIN SISCFE.CFTV_PERSONA p ON
        SC.ID_V_PERSONA = p.ID_V_PERSONA
        INNER JOIN SISCFE.CFTV_PERSONA_JURIDICA cpj ON
        cpj.ID_V_PERSONA = p.ID_V_PERSONA
        INNER JOIN SISCFE.CFTV_PERSONA pp ON
        pp.ID_V_PERSONA = CPJ.ID_V_PERSONA_RLEGAL
        INNER JOIN SISCFE.CFTV_PERSONA_NATURAL cpn ON
        cpn.ID_V_PERSONA = CPJ.ID_V_PERSONA_RLEGAL
WHERE
    sc.ID_V_CASO = PI_V_ID_CASO
  AND sc.ID_N_TIPO_PERSONA = 2;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERROR AL RECUPERAR LA LISTA DE PERSONAS JUR?DICAS: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_PERSONAS%ISOPEN THEN
            CLOSE PO_CR_PERSONAS;
END IF;
END MPSP_LISTAR_PARTE_INVOLUCRADA_JURIDICA;


PROCEDURE MPSP_LISTAR_HECHOS_DENUNCIA (
    PI_V_ID_CASO         IN  VARCHAR2,
    PO_V_ERR_COD         OUT VARCHAR2,
    PO_V_ERR_MSG         OUT VARCHAR2,
    PO_CR_HECHOS         OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_HECHOS FOR
SELECT
    h.ID_N_UBIGEO ID_UBIGEO,
    h.ID_N_TIPO_LUGAR ID_TIPO_LUGAR,
    h.ID_N_TIPO_VIA ID_TIPO_VIA,
    h.NU_N_DIRECCION NUMERO_DIRECCION,
    h.DI_V_HECHO DIRECCION,
    h.CD_V_LATITUD LATITUD,
    h.CD_V_LONGITUD LONGITUD,
    h.FE_D_HECHO FECHA_HECHO,
    h.ID_N_TIPO_HECHO ID_TIPO_HECHO,
    h.DE_V_NARRATIVA DESCRIPCION_NARRATIVA,
    h.FE_D_DETENCION FECHA_DETENCION,
    h.NU_N_FALLECIDOS NUMERO_FALLECIDOS,
    h.ID_N_TIPO_ENCARGADO ID_TIPO_ENCARGADO
FROM
    SISMPA.MPTV_HECHO h
WHERE
    h.ID_V_CASO = PI_V_ID_CASO;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERRO AL RECUPERAR LOS HECHOS: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_HECHOS%ISOPEN THEN
            CLOSE PO_CR_HECHOS;
END IF;
END MPSP_LISTAR_HECHOS_DENUNCIA;

PROCEDURE MPSP_RECUPERAR_DATOS_GENERALES (
    PI_V_ID_CASO          IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DATOS_GENERALES       OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_DATOS_GENERALES FOR
SELECT
    d.ID_V_CASO ID_CASO,
    d.ID_V_DENUNCIA ID_DENUNCIA,
    C.CO_V_CASO NUMERO_CASO,
    dr.DE_V_CORREO CORREO,
    dr.NU_V_TELEFONO TELEFONO,
    d.ID_N_DPND_POLICIAL ID_DEPENDENCIA_POLICIAL,
    DP.NO_V_DPND_POLICIAL NOMBRE_DEPENDENCIA_POLICIAL,
    d.FE_D_LLAMADA FECHA_LLAMADA,
    p.ID_N_TIPO_DOC_IDENT ID_TIPO_DOCUMENTO_IDENTIDAD,
    DOC.NO_V_TIPO_DOC_IDENT NOMBRE_TIPO_DOCUMENTO_IDENTIDAD,
    p.NU_V_DOCUMENTO NUMERO_DOCUMENTO,
    pn.NO_V_CIUDADANO NOMBRE_CIUDADANO,
    pn.AP_V_PATERNO APELLIDO_PATERNO,
    pn.AP_V_MATERNO APELLIDO_MATERNO,
    pn.FL_C_VERIFICADO ES_VERIFICADO,
    ES.NO_V_ESPECIALIDAD NOMBRE_ESPECIALIDAD,
    ES.ID_V_ESPECIALIDAD ID_ESPECIALIDAD,
    d.ID_N_TIPO_DENUNCIA,
    TO_CHAR(C.FE_D_CREACION,'DD/MM/YYY HH:MI AM') FE_D_CREACION
FROM
    SISMPA.MPTV_DENUNCIA d
        INNER JOIN SISMPA.MPTV_DENUNCIA_REMITENTE dr ON
        dr.ID_V_DENUNCIA_REMITENTE = d.ID_V_DENUNCIA_REMITENTE
        INNER JOIN SISEFE.EFTV_CASO C ON C.ID_V_CASO = D.ID_V_CASO
        LEFT JOIN SISMAEST.CFTM_DEPENDENCIA_POLICIAL DP ON DP.ID_N_DPND_POLICIAL = D.ID_N_DPND_POLICIAL
        --INNER JOIN SISMAEST.CFTM_TIPO_ESPECIALIDAD_ESPECIALIDAD TEE ON TEE.ID_V_TIPO_ESPECIALIDAD_ESPECIALIDAD = C.ID_V_TIPO_ESPECIALIDAD_ESPECIALIDAD
        INNER JOIN SISMAEST.CFTM_ESPECIALIDAD ES ON ES.ID_V_ESPECIALIDAD = C.ID_V_ESPECIALIDAD
        INNER JOIN SISCFE.CFTV_PERSONA p ON
        p.ID_V_PERSONA = dr.ID_V_PERSONA
        INNER JOIN SISCFE.CFTV_PERSONA_NATURAL pn ON
        pn.ID_V_PERSONA = p.ID_V_PERSONA
        INNER JOIN SISMAEST.CFTM_TIPO_DOC_IDENT DOC ON DOC.ID_N_TIPO_DOC_IDENT = p.ID_N_TIPO_DOC_IDENT
WHERE
    d.ID_V_CASO = PI_V_ID_CASO;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERROR AL RECUPERAR LOS DATOS GENERALES DE LA DENUNCIA: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_DATOS_GENERALES%ISOPEN THEN
            CLOSE PO_CR_DATOS_GENERALES;
END IF;
END MPSP_RECUPERAR_DATOS_GENERALES;

PROCEDURE MPSP_LISTAR_SUJETO_CONTACTO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_CONTACTOS       OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_CONTACTOS FOR
SELECT
    SCN.ID_V_SUJETO_CONTACTO AS ID_SUJETO_CONTACTO,
    SCN.ID_V_SUJETO_CASO AS ID_SUJETO_CASO,
    SCN.ID_N_TIPO_CONTACTO AS ID_TIPO_CONTACTO,
    SCN.NO_V_DATOS_CONTACTO AS DATO_CONTACTO,
    SCN.FL_C_ORIGEN AS ORIGEN,
    SCN.FL_C_CONTACTO_SECUNDARIO AS CONTACTO_SECUNDARIO
FROM
    SISCFE.CFTV_SUJETO_CONTACTO SCN
WHERE
    SCN.ID_V_SUJETO_CASO = PI_V_ID_SUJETO_CASO;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERROR AL RECUPERAR LOS CONTACTOS DEL SUJETO: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_CONTACTOS%ISOPEN THEN
            CLOSE PO_CR_CONTACTOS;
END IF;
END MPSP_LISTAR_SUJETO_CONTACTO;

PROCEDURE MPSP_LISTAR_DIRECCIONES_SUJETO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DIRECCIONES     OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_DIRECCIONES FOR
SELECT
    d.ID_V_DIRECCION AS ID_DIRECCION,
    d.ID_N_TIPO_PERSONA AS ID_TIPO_PERSONA,
    d.ID_V_SUJETO_CASO AS ID_SUJETO_CASO,
    d.ID_N_UBIGEO AS ID_UBIGEO,
    d.ID_N_TIPO_DOMICILIO AS ID_TIPO_DOMICILIO,
    d.CO_V_POSTAL AS CODIGO_POSTAL,
    d.ID_V_UBIGEO_PUEBLO AS ID_UBIGEO_PUEBLO,
    d.ID_N_TIPO_VIA AS ID_TIPO_VIA,
    d.DI_V_RESIDENCIA AS RESIDENCIA,
    d.DE_V_BLOCK_DIRECCION AS BLOCK_DIRECCION,
    d.DE_V_INTERIOR AS INTERIOR,
    d.DE_V_URBANIZACION AS URBANIZACION,
    d.DE_V_ETAPA AS ETAPA,
    d.DE_V_MANZANA AS MANZANA,
    d.DE_V_LOTE AS LOTE,
    d.DE_V_REFERENCIA AS REFERENCIA,
    d.NU_V_CELULAR AS NUMERO_CELULAR,
    d.DE_V_CORREO AS CORREO,
    d.CD_V_LATITUD AS LATITUD,
    d.CD_V_LONGITUD AS LONGITUD,
    d.ID_N_PAIS AS ID_PAIS,
    d.ID_N_TIPO_PREF_URB AS ID_TIPO_PREF_URB
FROM
    SISCFE.CFTV_DIRECCION d
WHERE
    d.ID_V_SUJETO_CASO = PI_V_ID_SUJETO_CASO;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1';
        PO_V_ERR_MSG := 'ERROR AL RECUPERAR LAS DIRECCIONES DEL SUJETO: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_DIRECCIONES%ISOPEN THEN
            CLOSE PO_CR_DIRECCIONES;
END IF;
END MPSP_LISTAR_DIRECCIONES_SUJETO;


PROCEDURE MPSP_LISTAR_DELITOS_POR_DENUNCIA (
    PI_V_ID_DENUNCIA      IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DELITOS         OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_DELITOS FOR
SELECT
    D.ID_V_DELITO_DENUNCIA ID,
    D.ID_N_DELITO ID_DELITO,
    DEL.NO_V_DELITO NOMBRE_DELITO,
    GD.ID_N_TIPO_GRADO_DELITO ID_TIPO_GRADO_DELITO,
    GD.NO_V_GRADO_DELITO NOMBRE_GRADO_DELITO,
    DS.ID_N_SUBGENERICO ID_SUBGENERICO,
    DS.NO_V_SUBGENERICO NOMBRE_SUBGENERICO,
    ES.ID_N_ESPECIFICO ID_ESPECIFICO,
    ES.NO_V_ESPECIFICO NOMBRE_ESPECIFICO,
    D.FE_D_CREACION FECHA_CREACION,
    D.ID_N_ORIGEN_TURNO ID_ORIGEN_TURNO,
    C.NO_V_DESCRIPCION NOMBRE_ORIGEN,
    ES.NU_V_ARTICULO NUMERO_ARTICULO,
    ES.DE_V_ARTICULO DESCRIPCION_ARTICULO,
    ES.NU_V_PARRAFO NUMERO_PARRAFO,
    ES.NU_V_INCISO NUMERO_INCISO
FROM
    SISMAEST.CFTM_DELITO DEL
        INNER JOIN SISMAEST.CFTM_DELITO_SUBGENERICO DS ON DS.ID_N_DELITO = DEL.ID_N_DELITO
        INNER JOIN SISMAEST.CFTM_DELITO_ESPECIFICO ES
                   ON ES.ID_N_SUBGENERICO = DS.ID_N_SUBGENERICO AND ES.ID_N_DELITO = DEL.ID_N_DELITO
        INNER JOIN SISMPA.MPTV_DELITO_DENUNCIA D
                   ON DEL.ID_N_DELITO = D.ID_N_DELITO
                       AND D.ID_N_SUBGENERICO = DS.ID_N_SUBGENERICO
                       AND D.ID_N_ESPECIFICO = ES.ID_N_ESPECIFICO
        INNER JOIN SISMAEST.CFTM_TIPO_GRADO_DELITO GD ON GD.ID_N_TIPO_GRADO_DELITO = D.ID_N_TIPO_GRADO_DELITO
        INNER JOIN SISMAEST.CFTM_CATALOGO C ON C.ID_N_CATALOGO = D.ID_N_ORIGEN_TURNO
WHERE
    ID_V_DENUNCIA = PI_V_ID_DENUNCIA
  AND D.ES_C_DELITO_DENUNCIA = '1';

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
    WHEN OTHERS THEN
        PO_V_ERR_COD := '1'; -- Error code
        PO_V_ERR_MSG := 'ERROR AL LISTAR LOS DELITOS DE LA DENUNCIA: ' || SQLCODE || ' - ' || SQLERRM;
        IF PO_CR_DELITOS%ISOPEN THEN
            CLOSE PO_CR_DELITOS;
END IF;
END MPSP_LISTAR_DELITOS_POR_DENUNCIA;


PROCEDURE MPSP_LISTAR_DELITOS_SUJETO (
    PI_V_ID_SUJETO_CASO   IN  VARCHAR2,
    PO_V_ERR_COD          OUT VARCHAR2,
    PO_V_ERR_MSG          OUT VARCHAR2,
    PO_CR_DELITOS_SUJETO  OUT SYS_REFCURSOR
) AS
BEGIN
OPEN PO_CR_DELITOS_SUJETO FOR
SELECT
    DS.ID_V_DELITO_SUJETO ID,
    DEL.ID_N_DELITO ID_DELITO,
    DEL.NO_V_DELITO NOMBRE_DELITO,
    C.NO_V_DESCRIPCION NOMBRE_ORIGEN,
    C.ID_N_CATALOGO ID_ORIGEN_TURNO,
    DSUB.ID_N_SUBGENERICO ID_SUBGENERICO,
    DSUB.NO_V_SUBGENERICO NOMBRE_SUBGENERICO,
    ES.ID_N_ESPECIFICO ID_ESPECIFICO,
    ES.NO_V_ESPECIFICO NOMBRE_ESPECIFICO,
    GD.ID_N_TIPO_GRADO_DELITO ID_TIPO_GRADO_DELITO,
    GD.NO_V_GRADO_DELITO NOMBRE_GRADO_DELITO,
    ES.NU_V_ARTICULO NUMERO_ARTICULO,
    ES.DE_V_ARTICULO DESCRIPCION_ARTICULO,
    ES.NU_V_PARRAFO NUMERO_PARRAFO,
    ES.NU_V_INCISO NUMERO_INCISO,
    DS.FE_D_CREACION FECHA_CREACION
FROM SISEFE.EFTV_DELITO_SUJETO DS
         INNER JOIN SISMAEST.CFTM_DELITO DEL ON DS.ID_N_DELITO = DEL.ID_N_DELITO
         INNER JOIN SISMAEST.CFTM_DELITO_SUBGENERICO DSUB ON DSUB.ID_N_DELITO = DEL.ID_N_DELITO
         INNER JOIN SISMAEST.CFTM_DELITO_ESPECIFICO ES
                    ON ES.ID_N_SUBGENERICO = DSUB.ID_N_SUBGENERICO AND ES.ID_N_DELITO = DEL.ID_N_DELITO
         INNER JOIN SISCFE.CFTV_DELITO_DETENIDO DET ON DET.ID_V_DELITO_SUJETO = DS.ID_V_DELITO_SUJETO
         INNER JOIN SISMAEST.CFTM_TIPO_GRADO_DELITO GD ON GD.ID_N_TIPO_GRADO_DELITO = DET.ID_N_TIPO_GRADO_DELITO
         INNER JOIN SISMAEST.CFTM_CATALOGO C ON C.ID_N_CATALOGO = DET.ID_N_ORIGEN_TURNO
         INNER JOIN SISCFE.CFTV_SUJETO_CASO SC ON SC.ID_V_SUJETO_CASO = DS.ID_V_SUJETO_CASO
WHERE SC.ID_V_CASO = PI_V_ID_SUJETO_CASO;

PO_V_ERR_COD := V_V_COD_OK;
	PO_V_ERR_MSG := V_V_MSG_OK;

EXCEPTION
		WHEN OTHERS THEN
			PO_V_ERR_COD := '1'; -- Error code
			PO_V_ERR_MSG := 'ERROR AL LISTAR LOS DELITOS DEL SUJETO: ' || SQLCODE || ' - ' || SQLERRM;
			IF PO_CR_DELITOS_SUJETO%ISOPEN THEN
				CLOSE PO_CR_DELITOS_SUJETO;
END IF;
END MPSP_LISTAR_DELITOS_SUJETO;


PROCEDURE MPSP_LISTAR_DESCRIPCION (
    P_NO_V_GRUPO IN VARCHAR2,
    P_NO_V_DESCRIPCION IN VARCHAR2,
    PI_N_PAGINA IN NUMBER,
    PI_N_POR_PAGINA IN NUMBER,
    PO_N_TOTAL_PAGINAS OUT NUMBER,
    PO_N_TOTAL_REGISTROS OUT NUMBER,
    PO_V_ERR_COD OUT VARCHAR2,
    PO_V_ERR_MSG OUT VARCHAR2,
    P_CURSOR OUT SYS_REFCURSOR
) AS
    EX_CONTROLADO EXCEPTION;
BEGIN
    -- Corrected to use dynamic input for group and description in COUNT
SELECT COUNT(*)
INTO PO_N_TOTAL_REGISTROS
FROM SISMAEST.CFTM_CATALOGO
WHERE NO_V_GRUPO = P_NO_V_GRUPO
  AND NO_V_DESCRIPCION LIKE '%' || P_NO_V_DESCRIPCION || '%';

IF PO_N_TOTAL_REGISTROS = 0 THEN
        PO_V_ERR_COD := '422002';
        PO_V_ERR_MSG := 'MPSP_LISTAR_DESCRIPCION - No se encontraron registros.';
        RAISE EX_CONTROLADO;
ELSE
        -- Calculate total pages only if records exist
        PO_N_TOTAL_PAGINAS := CEIL(PO_N_TOTAL_REGISTROS / PI_N_POR_PAGINA);
END IF;

    -- Opening cursor with dynamic pagination and filters applied
OPEN P_CURSOR FOR
SELECT ID_N_CATALOGO, ID_V_ITEM, NO_V_GRUPO, CO_V_DESCRIPCION, NO_V_DESCRIPCION
FROM SISMAEST.CFTM_CATALOGO
WHERE NO_V_GRUPO = P_NO_V_GRUPO
  AND NO_V_DESCRIPCION LIKE '%' || P_NO_V_DESCRIPCION || '%'
ORDER BY ID_N_CATALOGO -- Assuming an order is needed for consistent pagination
OFFSET (PI_N_PAGINA - 1) * PI_N_POR_PAGINA ROWS FETCH NEXT PI_N_POR_PAGINA ROWS ONLY;

EXCEPTION
    WHEN EX_CONTROLADO THEN
        -- Additional logging or actions can be added here for the custom exception
        NULL; -- Placeholder for actions like logging
WHEN OTHERS THEN
        PO_V_ERR_COD := '1'; -- Generic error code
        PO_V_ERR_MSG := 'ERROR AL LISTAR DESCRIPCION: ' || SQLCODE || ' - ' || SQLERRM;
END MPSP_LISTAR_DESCRIPCION;


END MPPK_DENUNCIA_TURNO;